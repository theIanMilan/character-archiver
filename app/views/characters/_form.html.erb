<%= simple_form_for(character) do |form| %>
  <%= form.error_notification %>

  <section>
    <h1>Basic Character Info</h1>
    <%= form.input :character_name %>
    <%= form.input :character_portrait_URL, placeholder: 'http://example.com/image.jpg' %>
    <%= form.input :portrait_credit_artist %>
    <%= form.input :portrait_credit_URL, placeholder: 'http://example.com/image.jpg' %>
    <%= form.input :background %>

    <div>
      <%= form.label :race %>
      <%= form.select(:race,
                      options_for_select(["Select Race", "Dragonborn", "Dwarf", "Elf", "Gnome", "Half-Elf","Half-Orc",
                                            "Halfling", "Human", "Tiefling", character.race],
                                          {selected: character.race, disabled: "Select Race"}),
                      {},
                      {class: 'form-control select2',
                      id: 'character_race'}) %>
    </div>

    <div class="d-flex">
      <%= form.input :alignment, as: :select,
                                 collection: [["Lawful Good", 'lawful_good'], ["Neutral Good", 'neutral_good'], ["Chaotic Good", 'chaotic_good'],
                                              ["Lawful Neutral", 'lawful_neutral'], ["True Neutral", 'true_neutral'], ["Chaotic Neutral", 'chaotic_neutral'],
                                              ["Lawful Evil", 'lawful_evil'], ["Neutral Evil", 'neutral_evil'], ["Chaotic Evil", 'chaotic_evil']],
                                 prompt: 'Select Alignment',
                                 wrapper_html: { class: 'flex-grow-1' }  %>
      <div class="align-self-end">
        <button id="alignment-help-btn" class="btn btn-outline-secondary mx-2" type='button' title="Get help based on Character's race"><i class="far fa-question-circle"></i></button>
        <%= image_tag('ajax-loader.gif', class: 'ajax-loading') %>
      </div>
    </div>

    <div id="alignment-help" class="mb-2"><span id="alignment-help-race"></span> alignment description: <span id="alignment-help-text"></span></div>

    <div>
      <%= form.label :sex %>
      <%= form.select(:sex,
                      options_for_select(["Select Sex assigned at birth", "Prefer not to say", "Male", "Female", "Intersex", character.sex],
                                         {selected: character.sex, disabled: "Select Sex assigned at birth"}),
                      {},
                      {class: 'form-control select2'}) %>
    </div>

    <div>
      <%= form.label :gender %>
      <%= form.select(:gender,
                      options_for_select(["Prefer not to say", "Male", "Female", "Non-binary", "Agender", "Genderfluid",
                                            "Bigender", "Polygender", character.gender],
                                          character.gender),
                      {},
                      {class: 'form-control select2'}) %>
    </div>

    <div>
      <%= form.label :sexual_orientation %>
      <%= form.select(:sexual_orientation,
                      options_for_select(['Prefer not to say', 'Asexual', 'Bisexual', 'Gay or Lesbian', 'Straight', 
                                            'Pansexual', 'Queer', character.sexual_orientation],
                                          character.sexual_orientation),
                      {},
                      {class: 'form-control select2'}) %>
    </div>

    <%= form.input :private_character, as: :select, collection: [["yes", true], ["no", false]] %>
  </section>

  <section class="mt-4">
    <h1>Class and Level</h1>
    <%= form.simple_fields_for :class_and_levels do |ff| %>
      <div>
        <%= ff.label :character_class, class: 'label-character-class' %>
        <%= ff.select(:character_class,
                      options_for_select(["Select Character Class", "Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", 
                                            "Paladin", "Ranger", "Rogue", "Sorcerer", "Warlock", "Wizard", character.class_and_levels.first.character_class],
                                          {selected: character.class_and_levels.first.character_class, disabled: "Select Character Class"}),
                      {},
                      {class: 'form-control select2'}) %>
      </div>

      <%= ff.input :character_subclass %>
      <%= ff.input :character_level, input_html: {step: 1, min: 1, max: 30} %>

      <div>
        <% if ff.object.persisted? %>
          <%= ff.label :_destroy, "Delete Class and Level" %>
          <%= ff.check_box :_destroy %>
        <% end %>
      </div>
    <% end %>
  </section>

  <%= form.button :submit, class: 'btn btn-primary my-3' %>
<% end %>

<script>
  $(document).ready(function() {
    $("#alignment-help").hide()
    $(".ajax-loading").hide()
    $("#alignment-help-btn").on("click", fetch_race_alignment)
    $(".select2").select2({tags: true})
    $('#character_race').on('change', function() {
      $('#alignment-help-btn').prop('disabled', false)
    })
  });

  function validate_race() {
    var errorMessage = "";
    if ($("#character_race").val() == "") {
      errorMessage += "Select Character Race for Alignment help."
      alert(errorMessage);
    }
    return errorMessage;
  }

  function fetch_race_alignment() {
    var validated = validate_race();
    var race = $("#character_race").val()
    var race_lower_cased = race.toLowerCase()
    var races = ["dragonborn", "dwarf", "elf", "gnome", "half-elf", "half-orc", "halfling", "human", "tiefling"]

    if (validated.length == 0) {
      if (races.includes(race_lower_cased)) {
        $("#alignment-help-btn").prop('disabled', true)
        $.ajax({
          type: "GET",
          url: ("https://www.dnd5eapi.co/api/races/" + race_lower_cased),
          dataType: "json",
          beforeSend: function() {
            $('.ajax-loading').show();
          },
          complete: function() {
            $('.ajax-loading').hide();
          },
          success: function (result, status, xhr) {
            $("#alignment-help-text").html(result.alignment)
            $("#alignment-help-text").removeClass('italic')
          },
          error: function (xhr, status, error) {
            alert("Result: " + status + " " + error + " " + xhr.status + " " + xhr.statusText)
          }
        })
      } else {
        let message = 'No information available in the D&D 5e Systems Reference Document (SRD).'
        $("#alignment-help-text").html(message)
        $("#alignment-help-text").addClass('italic')
      }

      $("#alignment-help-race").html(race) // Puts Race text to help box 
      $("#alignment-help").show();
    }
  }
</script>